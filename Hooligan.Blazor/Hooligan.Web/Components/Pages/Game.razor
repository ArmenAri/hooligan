@page "/Game"
@using Hooligan.Web.Models
@using Hooligan.Web.Extensions
@rendermode InteractiveServer

@inject HooliganApiClient HooliganApi
@inject ISnackbar Snackbar

<MudSnackbarProvider/>

<PageTitle>Game</PageTitle>

<MudDropContainer
    T="Item"
    Items="_items"
    ItemsSelector="@((item, dropzone) => item.Identifier == dropzone)"
    ItemDropped="ItemUpdated">
    <ChildContent>
        <MudDropZone T="Item" Identifier="@Identifiers.Discoveries.ToString()" Class="d-flex flex-wrap"/>
    </ChildContent>
    <ItemRenderer>
        <MudPaper
            @key="@context.Name"
            id="@context.Name"
            @ondrop="@(() => HandleDrop(context))"
            Elevation="25"
            Class="pa-4 m-2">
            @context.Icon @context.Name.ToUpperOnlyFirstCharacter()
        </MudPaper>
    </ItemRenderer>
</MudDropContainer>

@code {
    private Item? TargetItem { get; set; }

    private void HandleDrop(Item item)
    {
        TargetItem = item;
    }

    private async Task ItemUpdated(MudItemDropInfo<Item> dropItem)
    {
        ArgumentNullException.ThrowIfNull(dropItem.Item);

        if (TargetItem is not null)
        {
            var response = await HooliganApi.CreateAssociation(new CreateAssociationCommand
            (
                dropItem.Item.Name,
                TargetItem.Name
            ));

            if (response.IsFail())
            {
                Snackbar.Add(response.Error?.Message, Severity.Error, options => { options.ErrorIcon = Icons.Material.Filled.Error; });
            }
            else
            {
                _items.Add(new Item
                {
#pragma warning disable CS8601 // Possible null reference assignment.
                    Name = response.Value?.Result,
                    Icon = response.Value?.Icon
#pragma warning restore CS8601 // Possible null reference assignment.
                });
            }
        }

        TargetItem = null;
    }

    private readonly List<Item> _items =
    [
        new Item { Name = "earth", Icon = "🌍" },
        new Item { Name = "wind", Icon = "🌬️" },
        new Item { Name = "fire", Icon = "🔥" },
        new Item { Name = "water", Icon = "💧" }
    ];

}